'use strict';
module.exports = (function() {
    var util = require('util');
    var EventEmitter = require('events').EventEmitter;
    var icloakipc = require("icloakipc");

    var test = function(address, port, options) {
        this._transport = new icloakipc.TCPIOLib(address, port, options);
        this._rpc = new icloakipc.jsonrpc(this._transport, "test");
        var base = this;
        this._rpc.on("connected", function() {
           base.emit("connected");
        });
        this._rpc.on("error", function(error) {
            base.emit("error", error);
        });
        this._rpc.on("emit", function(evt, args) {
            var combined_args = [evt].concat(args);
            base.emit.apply(base, combined_args);
        });
    }

    // Inherit event emitter functionality
    util.inherits(test, EventEmitter); //updater

    // Start transport
    test.prototype.start = function() { //updater
        this._transport.start()
    }
    // kills the child process
    test.prototype.kill = function(n) {
        this._transport.kill(n)
    }


    test.prototype.hello = function(first, last) { return this._rpc.call('hello', {'first': first, 'last': last}); }

    test.prototype.error_method = function() { return this._rpc.call('error_method', {}); }

    return test;
}());
