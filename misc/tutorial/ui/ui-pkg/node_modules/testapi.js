'use strict';
module.exports = (function() {
    var util = require('util');
    var EventEmitter = require('events').EventEmitter;
    var stdio = require("stdio");

    var testApi = function(bin_path, args) {
        this._transport = new stdio.stdioLib(bin_path, args);
        this._rpc = new stdio.jsonrpc(this._transport, "testApi");
        var base = this;
        this._rpc.on("connected", function() {
           base.emit("connected");
        });
        this._rpc.on("error", function(error) {
            base.emit("error", error);
        });
    }

    // Inherit event emitter functionality
    util.inherits(testApi, EventEmitter); //updater

    // Start transport
    testApi.prototype.start = function() { //updater
        this._transport.start()
    }


    testApi.prototype.call_me_back_brah = function() { return this._rpc.call('call_me_back_brah', {}); }

    /**
     * Returns the service api version.
     */
    testApi.prototype.get_api_version = function() { return this._rpc.call('get_api_version', {}); }

    return testApi;
}());